# your Garena username
gcb_username = G.M.Bot

# your Garena password
gcb_password = ultramarine1

# whether to keep a log
gcb_log = true

# create a new log file each day (prevents gcb.log from getting too large)
gcb_log_new_file = false

# whether or not to output debug information
gcb_debug = false

# path to plugins
gcb_plugin_path = plugins/

# the main host (login server) to use
gcb_mainhost = con2.garenaconnect.com

# the room gcb should join (if gcb_roomid and gcb_roomhost are not set)
#  note that not set means the option must be commented out
#  you should use gcb_roomid and gcb_roomhost if at all possible
#  also, using gcb_roomname may not work if there is more than room with that name
# gcb_roomname = 

# the room ID gcb should join
#  See README for details on how to find this.
gcb_roomid = 

# the room host for gcb_roomid
#  See README for details on how to find this.
gcb_roomhost = 

# the GP2PP port
# you shouldn't have to change this
gcb_peerport = 1513

# the current Garena version
gcb_version = 0x0000027C

# hostname where GHost++ is located
#  Garena clients connecting via gcb will connect to whatever game is hosted by GHost++
gcb_tcp_host = 127.0.0.1

# GHost++ host port(s)
#  To specify a list, do something like:
#  gcb_tcp_port = 6112, 6113, 6114
gcb_tcp_port = 6112

# Delay for standard retransmission of packets
#  If a accept packet is not sent for this delay, then the packet will be retransmitted
gcb_tcp_standarddelay = 2000

# whether to enable debug for TCP connections (will generate lots of output!)
gcb_tcp_debug = false

# whether to buffer the TCP output to GHost++ to check for name spoofing and other things
gcb_tcp_outbuffer = true

# names to reserve when connecting to GHost++
#  To specify a list, do something like:
#  gcb_tcp_reservednames = ownername, rootadminname, Open, Closed
gcb_tcp_reservednames = Open, Closed

# plugins to automatically load at startup
# You must put the fully qualified name of the plugin (includes package)
#  To specify a list, do something like:
#  gcb_plugins = gcb.examples.hello, awesome.myplugin, awesome.myplugin2
gcb_plugins = 

# the port to listen for Warcraft III game broadcasts
# you shouldn't have to change this
gcb_broadcastport = 6112

# gcb will rebroadcast packets captured from gcb_broadcastport to the following ports
#  Use if you wish to run multiple instances of gcb. gcb_broadcastport must be modified as well.
# example: gcb_rebroadcast = 6113, 6114
# gcb_rebroadcast = 

# if enabled, gcb will filter received UDP packets on gcb_broadcastport
#  Specifically, only valid W3GS_GAMEINFO packets with addr=gcb_tcp_host and port in gcb_tcp_port will be passed on
#  Note that this does not affect gcb_rebroadcast functionality (all UDP packets will be rebroadcasted)
gcb_broadcastfilter = true

# filtering IP address doesn't seem to work very well for local address; filter anyway?
gcb_broadcastfilter_ip = false

# how often to reconnect to Garena (in minutes)
#  Might be necessary if running gcb for extended periods of time
#  Default value is disabled
gcb_reconnect_interval = -1

# whether to enable GCBI protocol
#  GCBI sends information about the joining Garena user to GHost++
#  Requires a patch in GHost++, however
gcb_enablegcbi = false

####################
# REVERSE SETTINGS #
####################

# whether to enable REVERSE or not
#  REVERSE changes the function of gcb so that you can join other Garena client's games
#  This should help with playing over Garena on unsupported systems, such as Linux
#  It functions quite similarly to GProxy++, although currently support for reconnection is not planned
#  Note that gcb is incompatible with REVERSE, so this will automatically disable gcb; gcb_bot can still be enabled
gcb_reverse = false

# your Warcraft III version; Garena seems to change the war3version, so gcb changes it back
#  For example, if your room uses 1.24d, write
#   gcb_reverse_war3version = 24
gcb_reverse_war3version = 26

# the starting port to host local games on
#  gcb hosts games on LAN
#  Once you connect to the game, gcb will route packets between you and the Garena remote server
#  Note that one port for each LAN game is necessary (see gcb_reverse_num for more details)
gcb_reverse_port = 6112

# the number of LAN games to host
#  gcb will create this many server sockets
#  Every time gcb receives a GAMEINFO broadcast, it will host on the next available server
#  The ports start at gcb_reverse_port and go up from there
#  If gcb_reverse_port = 6112 and gcb_reverse_num = 5, then the last port will be 6116
gcb_reverse_num = 5

# the hostname to send UDP packets received from Garena to
#  For example, if you want to use Warcraft III only on your own computer, then set
#   gcb_reverse_target = 127.0.0.1
#  If you want the entire LAN to receive broadcast packets from this gcb, then set
#   gcb_reverse_target = 255.255.255.255
gcb_reverse_target = 127.0.0.1

####################
# LAN FIX SETTINGS #
####################

# whether to enable LAN FIX or not
# LAN FIX is necessary if you wish to communicate with Garena clients on the same LAN as you
# LAN FIX is only intended for testing purposes; LAN Garena clients can connect to GHost++ over LAN instead of through gcb
#  Note that if LAN FIX is on, game names to all users will be renamed and will contain a 'w'
#  This is to differentiate for LAN users between joining the LAN game and joining through gcb
gcb_lanfix = false

# the Garena username of the LAN Garena client
gcb_lanfix_username = garena

# the internal IP address of the LAN Garena client
gcb_lanfix_ip = 192.168.1.2

# the GP2PP port of the LAN Garena client
gcb_lanfix_port = 1513

################
# BOT SETTINGS #
################

# whether to run gcb_bot
# if set to true, gcb_bot will run
gcb_bot = false

# whether to disable gcb (only if gcb_bot is enabled)
gcb_bot_disable = true

# any string representing this bot's owner; leave blank to disable !owner command
gcb_bot_owner = 

# root admin; leave blank to disable root
gcb_bot_root = 

# the bot trigger
gcb_bot_trigger = !

# time in milliseconds to wait after a chat message is sent, before sending another message
gcb_bot_delay = 2000

# time in milliseconds a public user must wait before bot will respond to another command
gcb_bot_publicdelay = 3000

# realm; only used in GHost++ and GHostOne databases
gcb_bot_realm = 

# GHost++ botid to target; only used in GHost++ extended databases
gcb_bot_id = 0

# GhostOne admin access when adding a new admin
gcb_bot_default_admin_access = 4095

# whether to turn on auto detect of banned word/phrase
gcb_bot_detect = false

# whether to turn on show warning if player entering room has the same IP address as a banned player
gcb_bot_warn_same_ip = true

# punishment when banned word/phrase is detected ("kick" or "ban"). Only if auto detect is true
gcb_bot_detect_banned_word = kick

# number of hours to be banned if banned word/phrase is detected AND ban is the punishment (in hours)
gcb_bot_detect_ban_time = 24

# announcement when banned word/phrase is detected; leave blank to disable this functionality
gcb_bot_detect_announcement = Banned word/phrase detected

# message to display when a user does not have access to a command; leave blank to disable this functionality
gcb_bot_access_message = You do not have access to this command.

# whether to disable !version command; may improve security a bit
gcb_bot_noversion = false

# whether to allow public commands
gcb_bot_publiccommands = true

# whether to have announcements when a ranked user enters the room
gcb_bot_user_join_announcement = false

# current DotA version
dota_version = 6.72c

# current Warcraft 3 version
warcraft_version = 1.24e / 1.24.4.6387

# show user's IP address in whoami/whois
gcb_bot_showip = false

# attempt to ban users from the room if they are on banlist and join the room
gcb_bot_global_ban = false

# kick low level players out of the room if they are not safelist rank or higher
gcb_bot_kick_low_level = false

# minimum level for players entering room, only if gcb_bot_kick_low_level is true
gcb_bot_kick_min_level = 10

# gcb_bot database settings
#  login information
gcb_bot_db_username = myusername
gcb_bot_db_password = mypassword

#  JDBC hostname
#   Format should be: jdbc:mysql://hostname/databasename
gcb_bot_db_host = jdbc:mysql://localhost/gcb

# database type
#  gcb: database created by gcb install.sql script
#  ghostone: GHostOne database
#  ghost++: GHost++ database (will not support safelist)
#  ghost_extended: GHost++ database with safelist table and commands through MySQL modification
gcb_bot_db_type = gcb

# command aliases
gcb_bot_alias_commands = commands, list, c, command, cl, lc, listcommand
gcb_bot_alias_kick = k
gcb_bot_alias_ban = b
gcb_bot_alias_unban = unb, ub, delban, dban, removeban, rb, rban, db
gcb_bot_alias_announce = ann, an, a
gcb_bot_alias_message = m
gcb_bot_alias_addadmin = aadmin, aa, adda
gcb_bot_alias_deladmin = dadmin, da, dela, removeadmin, radmin, ra, unadmin, ua
gcb_bot_alias_addsafelist = addsafe, asafe, as, asl
gcb_bot_alias_delsafelist = delsafe, dels, ds, dsl, removesafelist, rsafe, rs, unsafelist, usl, us
gcb_bot_alias_say = s
gcb_bot_alias_stats = dotastat, dotastats, stat, dstats, dstat, sd, ds
gcb_bot_alias_addbannedword = addbannedw, addbw, abw
gcb_bot_alias_delbannedword = delbannedw, delbw, dbw
gcb_bot_alias_adminstats = adminstat, astat, as
gcb_bot_alias_rand = random, r
gcb_bot_alias_time = t
gcb_bot_alias_uptime = up, onlinetime, ot, onlinet, upt
gcb_bot_alias_baninfo = baninformation, bi, bani
gcb_bot_alias_addjoinroommessage = addjoinmessage, ajrm, ajm, addjrm, addjm, joinmessage, jm, jmessage, joinm
gcb_bot_alias_findip = fip, find, f
gcb_bot_alias_roomstats = rs, rooms, rstats, rstat, roomstat, rmstat, rmstats
gcb_bot_alias_checkuser = cuser, check
gcb_bot_alias_statsdota = sd, ds, stats, dotastats, dotas, sdota